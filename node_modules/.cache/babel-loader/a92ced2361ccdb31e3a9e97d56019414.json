{"ast":null,"code":"import _regeneratorRuntime from\"/Users/horikazuto/ChooseOne/LatestChooseOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/horikazuto/ChooseOne/LatestChooseOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/horikazuto/ChooseOne/LatestChooseOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,Fragment}from'react';import{Helmet}from\"react-helmet\";import InfiniteScroll from\"react-infinite-scroller\";import QuestionList from'../components/QuestionList.js';// Firebase\nimport{getApps,initializeApp}from'firebase/app';import{getFirestore,collection,query,orderBy,limit,startAfter,getDocs}from\"firebase/firestore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var firebaseConfig={apiKey:\"AIzaSyArjDv3hS4_rw1YyNz-JFXDX1ufF72bqr8\",authDomain:\"chooseone-105a9.firebaseapp.com\",databaseURL:\"https://chooseone-default-rtdb.firebaseio.com\",projectId:\"chooseone\",storageBucket:\"chooseone.appspot.com\",messagingSenderId:\"722704825746\",appId:\"1:722704825746:web:73f11551b9e59f4bc2d54b\",measurementId:\"G-YJ97DZH6V5\"};var db='';if(!getApps().length){var firebaseApp=initializeApp(firebaseConfig);db=getFirestore(firebaseApp);}else{db=getFirestore();}export default function Home(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),hasMore=_useState4[0],setHasMore=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),end=_useState6[0],setEnd=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),last=_useState8[0],setLast=_useState8[1];useEffect(function(){if(questions.length!==0)return null;var q=query(collection(db,'questions'),orderBy('created_at','desc'),limit(10));var promiseD=new Promise(function(resolve,reject){resolve(getDocs(q));});promiseD.then(function(qq){var ques=[];Promise.all(qq.docs.map(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(doc){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ques.push(doc.data());if(ques.length===10)setLast(doc);case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}())).then(function(){setQuestions(ques);});},[]);if(end===null){setEnd(query(collection(db,'questions'),orderBy('created_at','asc'),limit(1)));}});var loadMore=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(page){var more,next,ques;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:more=true;setHasMore(false);_context3.next=4;return getDocs(query(collection(db,'questions'),orderBy('created_at','desc'),startAfter(last),limit(10)));case 4:next=_context3.sent;ques=[];_context3.next=8;return Promise.all(next.docs.map(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(doc){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:ques.push(doc.data());if(doc===end||ques.length===10){if(doc===end)more=false;setLast(doc);}case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref3.apply(this,arguments);};}())).then(function(){return setQuestions(questions.concat(ques));});case 8:if(more)setHasMore(true);else setHasMore(false);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function loadMore(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Helmet,{title:\"ChooseOne\",meta:[{name:'description',content:'ChooseOne lets you have access to general understandings through user-interactive questions. The more you vote, the more you can influence the results, and it can be helpful to all the people who want to know the results.'}]}),/*#__PURE__*/_jsx(InfiniteScroll,{loadMore:loadMore,hasMore:hasMore,threshold:500,loader:/*#__PURE__*/_jsx(\"div\",{}),children:/*#__PURE__*/_jsx(QuestionList,{questions:questions})})]});}","map":{"version":3,"sources":["/Users/horikazuto/ChooseOne/LatestChooseOne/src/screens/Home.js"],"names":["React","useState","useEffect","Fragment","Helmet","InfiniteScroll","QuestionList","getApps","initializeApp","getFirestore","collection","query","orderBy","limit","startAfter","getDocs","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","length","firebaseApp","Home","questions","setQuestions","hasMore","setHasMore","end","setEnd","last","setLast","q","promiseD","Promise","resolve","reject","then","qq","ques","all","docs","map","doc","push","data","loadMore","page","more","next","concat","name","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport InfiniteScroll  from \"react-infinite-scroller\"\n\nimport QuestionList from '../components/QuestionList.js';\n\n// Firebase\nimport { getApps, initializeApp } from 'firebase/app';\nimport { getFirestore, collection, query, orderBy, limit, startAfter, getDocs } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyArjDv3hS4_rw1YyNz-JFXDX1ufF72bqr8\",\n  authDomain: \"chooseone-105a9.firebaseapp.com\",\n  databaseURL: \"https://chooseone-default-rtdb.firebaseio.com\",\n  projectId: \"chooseone\",\n  storageBucket: \"chooseone.appspot.com\",\n  messagingSenderId: \"722704825746\",\n  appId: \"1:722704825746:web:73f11551b9e59f4bc2d54b\",\n  measurementId: \"G-YJ97DZH6V5\"\n};\nvar db = '';\nif (!getApps().length){ \n  const firebaseApp = initializeApp(firebaseConfig);\n  db = getFirestore(firebaseApp);\n}else{\n  db = getFirestore();\n}\n\n\nexport default function Home () {\n\n  const [questions, setQuestions] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [end, setEnd] = useState(null);\n  const [last, setLast] = useState(null);\n\n  useEffect(() => {\n    if(questions.length !== 0) return null;\n\n    const q = query(collection(db, 'questions'), orderBy('created_at', 'desc'), limit(10));\n    const promiseD = new Promise(function(resolve, reject) {\n      resolve(getDocs(q));\n    });\n    promiseD.then((qq) => {\n      var ques = [];\n      Promise.all(qq.docs.map(async doc => {\n        ques.push(doc.data());\n        if(ques.length === 10) setLast(doc);\n      })).then(() => {\n        setQuestions(ques);\n      })\n    }, []);\n\n    if(end === null){\n      setEnd(query(collection(db, 'questions'), orderBy('created_at', 'asc'), limit(1)));\n    }\n  });\n\n  const loadMore = async (page) => {\n    var more = true;\n    setHasMore(false);\n\n    const next = await getDocs(query(collection(db, 'questions'), orderBy('created_at', 'desc'), startAfter(last), limit(10)));\n    var ques = [];\n    await Promise.all(next.docs.map(async doc => {\n      ques.push(doc.data());\n      if(doc === end || ques.length === 10) {\n        if(doc === end) more = false;\n        setLast(doc);\n      }\n    })).then(() => setQuestions(questions.concat(ques)));\n\n    if(more) setHasMore(true);\n    else setHasMore(false);\n  }\n\n  return (\n    <Fragment>\n      <Helmet\n        title = 'ChooseOne'\n        meta={[\n          { name: 'description', content: 'ChooseOne lets you have access to general understandings through user-interactive questions. The more you vote, the more you can influence the results, and it can be helpful to all the people who want to know the results.' }\n        ]}\n      />\n      <InfiniteScroll\n        loadMore={loadMore}\n        hasMore={hasMore}\n        threshold={500}\n        loader={<div></div> }\n      >\n        <QuestionList questions={questions} />\n      </InfiniteScroll>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}