{"ast":null,"code":"var _jsxFileName = \"/Users/horikazuto/ChooseOne/LatestChooseOne/src/components/HoriChart.js\";\nimport React, { Fragment } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BarChart(props) {\n  var {\n    small,\n    skeleton,\n    labels,\n    values,\n    colors\n  } = props;\n  var duration = skeleton ? 0 : 5000 - small * 3000;\n  const data = {\n    labels: labels,\n    datasets: [{\n      data: values,\n      backgroundColor: colors,\n      borderColor: colors,\n      hoverBackgroundColor: colors,\n      borderWidth: 2,\n      hoverBorderColor: colors,\n      hoverBorderWidth: 7,\n      borderSkipped: 'top'\n    }]\n  };\n  const options = {\n    indexAxis: 'y',\n    maintainAspectRatio: false,\n    animation: {\n      duration: 0\n    },\n    tooltips: {\n      backgroundColor: 'white',\n      titleFontColor: 'black',\n      caretSize: 5,\n      callbacks: {\n        labelColor: function (tooltipItem, chart) {\n          return {\n            borderColor: 'white',\n            backgroundColor: 'white'\n          };\n        },\n        labelTextColor: function (tooltipItem, chart) {\n          return 'black';\n        }\n      }\n    },\n    scales: {\n      yAxes: [{\n        barPercentage: .1,\n        categoryPercentage: .4\n      }],\n      xAxes: [{\n        ticks: {\n          min: 0,\n          precision: 0\n        }\n      }]\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      labels: {\n        render: 'value',\n        precision: 0\n      }\n    },\n    layout: {\n      padding: {// top: 13,\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      height: 'auto',\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_c = BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/horikazuto/ChooseOne/LatestChooseOne/src/components/HoriChart.js"],"names":["React","Fragment","Bar","BarChart","props","small","skeleton","labels","values","colors","duration","data","datasets","backgroundColor","borderColor","hoverBackgroundColor","borderWidth","hoverBorderColor","hoverBorderWidth","borderSkipped","options","indexAxis","maintainAspectRatio","animation","tooltips","titleFontColor","caretSize","callbacks","labelColor","tooltipItem","chart","labelTextColor","scales","yAxes","barPercentage","categoryPercentage","xAxes","ticks","min","precision","plugins","legend","display","render","layout","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,eAAe,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAEvC,MAAI;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,MAA3B;AAAmCC,IAAAA;AAAnC,MAA8CL,KAAlD;AACA,MAAIM,QAAQ,GAAGJ,QAAQ,GAAG,CAAH,GAAO,OAAOD,KAAK,GAAC,IAA3C;AAEA,QAAMM,IAAI,GAAG;AACXJ,IAAAA,MAAM,EAAEA,MADG;AAEXK,IAAAA,QAAQ,EAAE,CACR;AACED,MAAAA,IAAI,EAAEH,MADR;AAEEK,MAAAA,eAAe,EAAEJ,MAFnB;AAGEK,MAAAA,WAAW,EAAEL,MAHf;AAIEM,MAAAA,oBAAoB,EAAEN,MAJxB;AAKEO,MAAAA,WAAW,EAAE,CALf;AAMEC,MAAAA,gBAAgB,EAAER,MANpB;AAOES,MAAAA,gBAAgB,EAAE,CAPpB;AAQEC,MAAAA,aAAa,EAAE;AARjB,KADQ;AAFC,GAAb;AAgBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAE,GADG;AAEdC,IAAAA,mBAAmB,EAAE,KAFP;AAGdC,IAAAA,SAAS,EAAE;AACTb,MAAAA,QAAQ,EAAE;AADD,KAHG;AAMdc,IAAAA,QAAQ,EAAE;AACRX,MAAAA,eAAe,EAAE,OADT;AAERY,MAAAA,cAAc,EAAE,OAFR;AAGRC,MAAAA,SAAS,EAAE,CAHH;AAIRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,UAAU,EAAE,UAASC,WAAT,EAAsBC,KAAtB,EAA4B;AACtC,iBAAO;AACLhB,YAAAA,WAAW,EAAE,OADR;AAELD,YAAAA,eAAe,EAAE;AAFZ,WAAP;AAID,SANQ;AAOTkB,QAAAA,cAAc,EAAE,UAASF,WAAT,EAAsBC,KAAtB,EAA4B;AAC1C,iBAAO,OAAP;AACD;AATQ;AAJH,KANI;AAsBdE,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CAAC;AACNC,QAAAA,aAAa,EAAE,EADT;AAENC,QAAAA,kBAAkB,EAAE;AAFd,OAAD,CADD;AAKNC,MAAAA,KAAK,EAAE,CAAC;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,GAAG,EAAE,CADA;AAELC,UAAAA,SAAS,EAAE;AAFN;AADD,OAAD;AALD,KAtBM;AAkCdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH,OADD;AAIPnC,MAAAA,MAAM,EAAE;AACNoC,QAAAA,MAAM,EAAE,OADF;AAENJ,QAAAA,SAAS,EAAE;AAFL;AAJD,KAlCK;AA2CdK,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,CACP;AADO;AADH;AA3CM,GAAhB;AAkDA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,MAAb;AAAqB,MAAA,IAAI,EAAElC,IAA3B;AAAiC,MAAA,OAAO,EAAES;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KA5EuBjB,Q","sourcesContent":["import React, { Fragment } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nexport default function BarChart (props) {\n\n  var { small, skeleton, labels, values, colors } = props;\n  var duration = skeleton ? 0 : 5000 - small*3000;\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        data: values,\n        backgroundColor: colors,\n        borderColor: colors,\n        hoverBackgroundColor: colors,\n        borderWidth: 2,\n        hoverBorderColor: colors,\n        hoverBorderWidth: 7,\n        borderSkipped: 'top'\n      }\n    ]\n  };\n\n  const options = {\n    indexAxis: 'y',\n    maintainAspectRatio: false,\n    animation: {\n      duration: 0,\n    },\n    tooltips: {\n      backgroundColor: 'white',\n      titleFontColor: 'black',\n      caretSize: 5,\n      callbacks: {\n        labelColor: function(tooltipItem, chart){\n          return {\n            borderColor: 'white',\n            backgroundColor: 'white',\n          }\n        },\n        labelTextColor: function(tooltipItem, chart){\n          return 'black';\n        },\n      }\n    },\n    scales: {\n      yAxes: [{\n        barPercentage: .1,\n        categoryPercentage: .4,\n      }],\n      xAxes: [{\n        ticks: {\n          min: 0,\n          precision: 0,\n        }\n      }]\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      labels: {\n        render: 'value',\n        precision: 0,\n      }\n    },\n    layout: {\n      padding: {\n        // top: 13,\n      },\n    },\n  };\n\n  return (\n    <Fragment>\n      <Bar height={'auto'} data={data} options={options} />\n    </Fragment>\n  )\n}"]},"metadata":{},"sourceType":"module"}