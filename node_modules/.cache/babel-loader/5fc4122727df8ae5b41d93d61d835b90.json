{"ast":null,"code":"import _slicedToArray from\"/Users/horikazuto/ChooseOne/LatestChooseOne/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,Fragment}from'react';import{WindMillLoading}from'react-loadingg';import{makeStyles,createStyles}from'@material-ui/core';import useMediaQuery from'@material-ui/core/useMediaQuery';import{Helmet}from\"react-helmet\";import QuestionList from'../components/QuestionList.js';// Firebase\nimport{getApps,initializeApp}from'firebase/app';import{getFirestore,collection,getDocs}from\"firebase/firestore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var firebaseConfig={apiKey:\"AIzaSyArjDv3hS4_rw1YyNz-JFXDX1ufF72bqr8\",authDomain:\"chooseone-105a9.firebaseapp.com\",databaseURL:\"https://chooseone-default-rtdb.firebaseio.com\",projectId:\"chooseone\",storageBucket:\"chooseone.appspot.com\",messagingSenderId:\"722704825746\",appId:\"1:722704825746:web:73f11551b9e59f4bc2d54b\",measurementId:\"G-YJ97DZH6V5\"};var db='';if(!getApps().length){var firebaseApp=initializeApp(firebaseConfig);db=getFirestore(firebaseApp);}else{db=getFirestore();}export default function QuestionSearch(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),results=_useState2[0],setResults=_useState2[1];var query=props.match.params.query;var q=query.toLowerCase();var styles=useStyles();var smallDisplay=useMediaQuery('(max-width:500px)');useEffect(function(){if(results!==null)return null;var promise=new Promise(function(resolve){resolve(getDocs(collection(db,'questions')));});var ques=[];promise.then(function(qq){Promise.all(qq.docs.map(function(que){var question=que.data();if(question.slug.includes('___'))var slug=question.slug.split('___')[0];else var slug=question.slug;var titleWords=slug.split('-');if(titleWords.includes(q)){ques.unshift(question);}else{for(var i=0;i<question.choices.length;i++){var c=question.choices[i].choice_text.toLowerCase().split(' ');if(c.includes(q)){ques.push(question);break;}}}return null;}));}).then(function(){setResults(ques);});});if(results===null){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:styles.title,children:\"Search Results\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"pre\",{children:\"      Searching...\"})}),/*#__PURE__*/_jsx(\"div\",{className:styles.loadingPos,children:/*#__PURE__*/_jsx(WindMillLoading,{className:styles.loadingPos,speed:1.2,size:smallDisplay?'small':'large'})})]});}else{return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Helmet,{title:\"Search Results\",meta:[{name:'description',content:'ChooseOne lets you have access to general understandings through user-interactive questions. The more you vote, the more you can influence the results, and it can be helpful to all the people who want to know the results.'}]}),/*#__PURE__*/_jsx(\"h3\",{className:styles.title,children:\"Search Results\"}),results.length===0&&/*#__PURE__*/_jsxs(\"pre\",{className:styles.forSmallNoMatch,children:[\"      No search results for - \",query,\" -\"]}),results.length!==0&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"pre\",{children:[\"      - \",query,\" -\"]}),/*#__PURE__*/_jsx(QuestionList,{questions:results})]})]});}}var useStyles=makeStyles(function(){return createStyles({title:{fontFamily:'lust-script, sans-serif',fontStyle:'normal',fontWeight:700,fontSize:24},loadingPos:{marginTop:50,marginLeft:50,position:'relative'},'@media (max-width: 500px)':{title:{fontSize:22,marginLeft:13,marginTop:7},forSmallNoMatch:{fontSize:12},loadingPos:{position:'relative',fontSize:10,marginTop:70,marginLeft:-150}}});});","map":{"version":3,"sources":["/Users/horikazuto/ChooseOne/LatestChooseOne/src/screens/QuestionSearch.js"],"names":["React","useState","useEffect","Fragment","WindMillLoading","makeStyles","createStyles","useMediaQuery","Helmet","QuestionList","getApps","initializeApp","getFirestore","collection","getDocs","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","length","firebaseApp","QuestionSearch","props","results","setResults","query","match","params","q","toLowerCase","styles","useStyles","smallDisplay","promise","Promise","resolve","ques","then","qq","all","docs","map","que","question","data","slug","includes","split","titleWords","unshift","i","choices","c","choice_text","push","title","loadingPos","name","content","forSmallNoMatch","fontFamily","fontStyle","fontWeight","fontSize","marginTop","marginLeft","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { WindMillLoading } from 'react-loadingg';\nimport { makeStyles, createStyles } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Helmet } from \"react-helmet\";\n\nimport QuestionList from '../components/QuestionList.js';\n\n// Firebase\nimport { getApps, initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyArjDv3hS4_rw1YyNz-JFXDX1ufF72bqr8\",\n  authDomain: \"chooseone-105a9.firebaseapp.com\",\n  databaseURL: \"https://chooseone-default-rtdb.firebaseio.com\",\n  projectId: \"chooseone\",\n  storageBucket: \"chooseone.appspot.com\",\n  messagingSenderId: \"722704825746\",\n  appId: \"1:722704825746:web:73f11551b9e59f4bc2d54b\",\n  measurementId: \"G-YJ97DZH6V5\"\n};\nvar db = '';\nif (!getApps().length){ \n  const firebaseApp = initializeApp(firebaseConfig);\n  db = getFirestore(firebaseApp);\n}else{\n  db = getFirestore();\n}\n\n\nexport default function QuestionSearch (props) {\n\n  const [results, setResults] = useState(null);\n  const query = props.match.params.query;\n  const q = query.toLowerCase();\n  const styles = useStyles();\n  const smallDisplay = useMediaQuery('(max-width:500px)');\n\n  useEffect(() => {\n    if(results !== null) return null;\n\n    const promise = new Promise(function(resolve) {\n      resolve(getDocs(collection(db, 'questions')))\n    })\n    var ques = [];\n    promise.then((qq) => {\n      Promise.all(qq.docs.map(que => {\n        var question = que.data();\n        if(question.slug.includes('___')) var slug = question.slug.split('___')[0];\n        else var slug = question.slug;\n        var titleWords = slug.split('-');\n        if(titleWords.includes(q)) {\n          ques.unshift(question);\n        }else{\n          for(var i=0; i<question.choices.length; i++){\n            var c = question.choices[i].choice_text.toLowerCase().split(' ');\n            if(c.includes(q)){ \n              ques.push(question)\n              break;\n            }\n          }\n        }\n        return null;\n      }));\n    }).then(() => {\n      setResults(ques);\n    })\n  });\n\n  if(results === null){\n    return (\n      <Fragment>\n        <p className={styles.title}>Search Results</p>\n        <div><pre>      Searching...</pre></div>\n        <div className={styles.loadingPos}>\n          <WindMillLoading className={styles.loadingPos} speed={1.2} size={smallDisplay ? 'small' : 'large'} />\n        </div>\n      </Fragment>\n    )\n  }else{\n    return (\n      <Fragment>\n        <Helmet\n          title = 'Search Results'\n          meta={[\n            { name: 'description', content: 'ChooseOne lets you have access to general understandings through user-interactive questions. The more you vote, the more you can influence the results, and it can be helpful to all the people who want to know the results.' }\n          ]}\n        />\n        <h3 className={styles.title}>Search Results</h3>\n        {results.length === 0 && <pre className={styles.forSmallNoMatch}>      No search results for - {query} -</pre>}\n        {results.length !== 0 && (\n          <Fragment>\n            <pre>      - {query} -</pre>\n            <QuestionList questions={results} />\n          </Fragment>\n        )}\n      </Fragment>\n    )\n  }\n}\n\nconst useStyles = makeStyles(() => createStyles({\n  title: {\n    fontFamily: 'lust-script, sans-serif',\n    fontStyle: 'normal',\n    fontWeight: 700,\n    fontSize: 24,\n  },\n  loadingPos: {\n    marginTop: 50,\n    marginLeft: 50,\n    position: 'relative',\n  },\n\n  '@media (max-width: 500px)': {\n    title: {\n      fontSize: 22,\n      marginLeft: 13,\n      marginTop: 7,\n    },\n    forSmallNoMatch: {\n      fontSize: 12,\n    },\n    loadingPos: {\n      position: 'relative',\n      fontSize: 10,\n      marginTop: 70,\n      marginLeft: -150,\n    }\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}